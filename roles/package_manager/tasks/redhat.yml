---
- name: Update DNF cache
  ansible.builtin.dnf:
    update_cache: true
  become: true
  when: package_manager_update_cache

- name: Check if RPM Fusion is already installed
  ansible.builtin.command: dnf repolist --enabled | grep rpmfusion
  register: rpmfusion_check
  failed_when: false
  changed_when: false
  become: true
  when: ansible_distribution == "Fedora"

- name: Enable RPM Fusion repositories (Fedora)
  block:
    - name: Import RPM Fusion GPG keys (2020 version works for F33-F43)
      ansible.builtin.rpm_key:
        key: "{{ item }}"
        state: present
      loop:
        - "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-free-fedora-2020"
        - "https://rpmfusion.org/keys?action=AttachFile&do=get&target=RPM-GPG-KEY-rpmfusion-nonfree-fedora-2020"
      become: true
      ignore_errors: true
      timeout: 120  # 2 minutes timeout for key fetch
      retries: 2
      delay: 5
    
    - name: Install RPM Fusion repositories
      ansible.builtin.dnf:
        name:
          - "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_version }}.noarch.rpm"
          - "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_version }}.noarch.rpm"
        state: present
        disable_gpg_check: false
      become: true
      timeout: 300  # 5 minutes timeout for repository installation
      retries: 2
      delay: 5
      ignore_errors: true  # Don't fail the entire playbook if RPM Fusion is unavailable
  when: 
    - ansible_distribution == "Fedora"
    - enable_rpmfusion | default(true)
    - rpmfusion_check.rc != 0  # Only run if RPM Fusion is not already enabled
  rescue:
    - name: RPM Fusion setup failed - continuing without it
      ansible.builtin.debug:
        msg: "RPM Fusion repositories could not be set up due to network issues. Continuing with base packages."

- name: Install DNF packages
  ansible.builtin.dnf:
    name: "{{ linux_packages_combined | default([]) }}"
    state: present
  become: true
  when: linux_packages_combined is defined and linux_packages_combined | length > 0

- name: Add DNF repositories
  ansible.builtin.yum_repository:
    name: "{{ item.name }}"
    description: "{{ item.description }}"
    baseurl: "{{ item.baseurl }}"
    gpgcheck: "{{ item.gpgcheck | default(true) }}"
    enabled: "{{ item.enabled | default(true) }}"
  loop: "{{ dnf_repositories | default([]) }}"
  become: true
  when: dnf_repositories is defined

- name: Upgrade all packages
  ansible.builtin.dnf:
    name: "*"
    state: latest
  become: true
  when: package_manager_upgrade_packages