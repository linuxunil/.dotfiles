---
- name: Install Rust via rustup
  ansible.builtin.shell: |
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  args:
    creates: "{{ ansible_env.HOME }}/.cargo/bin/rustc"

- name: Set default Rust toolchain
  ansible.builtin.shell: |
    {{ ansible_env.HOME }}/.cargo/bin/rustup default stable
  args:
    creates: "{{ ansible_env.HOME }}/.rustup/toolchains/stable-{{ ansible_architecture }}-apple-darwin"
  when: ansible_os_family == "Darwin"

- name: Set default Rust toolchain (Linux)
  ansible.builtin.shell: |
    {{ ansible_env.HOME }}/.cargo/bin/rustup default stable
  args:
    creates: "{{ ansible_env.HOME }}/.rustup/toolchains/stable-{{ ansible_architecture }}-unknown-linux-gnu"
  when: ansible_os_family != "Darwin"

- name: Add Rust to PATH
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.zprofile"
    line: 'export PATH="$HOME/.cargo/bin:$PATH"'
    create: true

- name: Install Rust-specific tools
  ansible.builtin.shell: |
    source {{ ansible_env.HOME }}/.cargo/env && cargo install {{ item.package }}
  loop:
    - { package: "cargo-edit", binary: "cargo-add" }
    - { package: "cargo-watch", binary: "cargo-watch" }
    - { package: "cargo-audit", binary: "cargo-audit" }
  args:
    creates: "{{ ansible_env.HOME }}/.cargo/bin/{{ item.binary }}"
  retries: 2
  delay: 10
  ignore_errors: true

- name: Verify Rust installation
  ansible.builtin.command: "{{ ansible_env.HOME }}/.cargo/bin/rustc --version"
  register: rust_version
  failed_when: rust_version.rc != 0
  changed_when: false