---
- name: Install rbenv (macOS)
  community.general.homebrew:
    name:
      - rbenv
      - ruby-build
    state: present
  when: ansible_os_family == "Darwin"

- name: Install Ruby build dependencies (Linux)
  ansible.builtin.dnf:
    name:
      - git
      - curl
      - openssl-devel
      - readline-devel
      - zlib-devel
      - ncurses-devel
      - libffi-devel
      - gdbm-devel
      - libyaml-devel
      - sqlite-devel
    state: present
  become: yes
  when: ansible_os_family == "RedHat"

- name: Clone rbenv (Linux)
  ansible.builtin.git:
    repo: https://github.com/rbenv/rbenv.git
    dest: "{{ ansible_env.HOME }}/.rbenv"
    version: master
  when: ansible_os_family == "RedHat"

- name: Clone ruby-build (Linux)
  ansible.builtin.git:
    repo: https://github.com/rbenv/ruby-build.git
    dest: "{{ ansible_env.HOME }}/.rbenv/plugins/ruby-build"
    version: master
  when: ansible_os_family == "RedHat"

- name: Add rbenv to PATH
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.local/bin/environment"
    line: 'export PATH="$HOME/.rbenv/bin:$PATH"'
    create: yes

- name: Add rbenv init
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.local/bin/environment"
    line: 'eval "$(rbenv init -)"'
    create: yes

- name: Install Ruby {{ language_setup.ruby.version | default('3.2') }}
  ansible.builtin.shell: |
    rbenv install {{ language_setup.ruby.version | default('3.2') }} --skip-existing
    rbenv global {{ language_setup.ruby.version | default('3.2') }}
  environment:
    PATH: "{{ ansible_env.HOME }}/.rbenv/bin:{{ ansible_env.PATH }}"