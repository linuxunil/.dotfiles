# Taskfile.yml - Go-based task runner for system setup
# https://taskfile.dev/
version: '3'

vars:
  INVENTORY: inventory/hosts.yml
  ANSIBLE_CONFIG: ansible.cfg
  OS: '{{OS}}'
  ARCH: '{{ARCH}}'

env:
  ANSIBLE_HOST_KEY_CHECKING: "False"
  ANSIBLE_STDOUT_CALLBACK: "yaml"

tasks:
  default:
    desc: Show available tasks
    silent: true
    cmds:
      - echo "System Setup Tasks"
      - echo "=================="
      - task --list-all

  # Setup tasks
  install-deps:
    desc: Install Ansible dependencies from Galaxy
    cmds:
      - echo "Installing Ansible Galaxy collections..."
      - ansible-galaxy collection install -r requirements.yml
      - echo "Collections installed!"
    sources:
      - requirements.yml

  # System setup tasks
  base:
    desc: Install base packages only (git, curl, bat, etc.)
    deps: [install-deps]
    cmds:
      - ansible-playbook -i {{.INVENTORY}} base.yml
    sources:
      - "base.yml"
      - "roles/base/**/*"
      - "roles/package_manager/**/*"

  dev:
    desc: Install development environment (base + neovim, go, python, etc.)
    deps: [install-deps]
    cmds:
      - ansible-playbook -i {{.INVENTORY}} dev.yml
    sources:
      - "dev.yml"
      - "roles/dev/**/*"
      - "roles/dotfiles/**/*"
      - "roles/shell/**/*"

  gui:
    desc: Install GUI applications (firefox, vscode, discord, etc.)
    deps: [install-deps]
    cmds:
      - ansible-playbook -i {{.INVENTORY}} gui.yml
    sources:
      - "gui.yml"
      - "roles/gui/**/*"

  dotfiles:
    desc: Configure dotfiles and shell
    deps: [install-deps]
    cmds:
      - ansible-playbook -i {{.INVENTORY}} dotfiles.yml
    sources:
      - "dotfiles.yml"
      - "roles/dotfiles/**/*"
      - "roles/shell/**/*"
      - "dotfiles/**/*"

  # Machine setup tasks
  bootstrap:
    desc: Quick bootstrap for new machine (recommended)
    deps: [install-deps]
    cmds:
      - echo "ðŸš€ Bootstrapping new machine..."
      - ansible-playbook -i {{.INVENTORY}} bootstrap.yml
      - echo "âœ… Bootstrap complete!"

  all:
    desc: Setup all machines (runs site.yml)
    deps: [install-deps]
    cmds:
      - echo "ðŸš€ Setting up all machines..."
      - ansible-playbook -i {{.INVENTORY}} site.yml
      - echo "âœ… All machines configured!"

  # Maintenance tasks
  clean:
    desc: Clean up broken symlinks and temporary files
    deps: [install-deps]
    cmds:
      - ansible-playbook -i {{.INVENTORY}} maintenance.yml --tags cleanup

  update:
    desc: Update package managers and system
    deps: [install-deps]
    cmds:
      - ansible-playbook -i {{.INVENTORY}} maintenance.yml --tags update

  maintenance:
    desc: Run full system maintenance
    deps: [install-deps]
    cmds:
      - ansible-playbook -i {{.INVENTORY}} maintenance.yml

  # Validation tasks
  check:
    desc: Test Ansible syntax and validate configuration
    cmds:
      - echo "Checking Ansible syntax..."
      - ansible-playbook -i {{.INVENTORY}} site.yml --syntax-check
      - echo "Validating inventory..."
      - ansible-inventory -i {{.INVENTORY}} --list > /dev/null
      - echo "All checks passed!"

  dry-run:
    desc: Show what would be done (dry run)
    cmds:
      - ansible-playbook -i {{.INVENTORY}} site.yml --check --diff

  test:
    desc: Test setup on current system (safe dry run)
    cmds:
      - echo "Testing system setup (dry run)..."
      - task dry-run
      - echo "Test completed successfully!"

  # Information tasks
  status:
    desc: Show current system setup status
    deps: [install-deps]
    cmds:
      - ansible-playbook -i {{.INVENTORY}} maintenance.yml --tags status

  inventory:
    desc: Show Ansible inventory
    cmds:
      - ansible-inventory -i {{.INVENTORY}} --list --yaml

  facts:
    desc: Gather and display system facts
    cmds:
      - ansible -i {{.INVENTORY}} localhost -m setup | rg "(ansible_os_family|ansible_distribution|ansible_architecture)"