---
- hosts: localhost
  connection: local
  gather_facts: true
  tasks:
    - name: Remove existing nvim config if it exists
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.config/nvim"
        state: absent
    - name: Symlink entire nvim directory
      ansible.builtin.file:
        src: "{{ dotfiles_repo_path }}/dotfiles/nvim"
        dest: "{{ ansible_env.HOME }}/.config/nvim"
        state: link
        force: yes
        follow: false
    - name: Create necessary directories for dotfiles
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/{{ item }}"
        state: directory
      loop:
        - ".config/helix"
        - ".config/zed"
        - ".config/ghostty"
        - ".config/zellij"
        - ".config/zellij/layouts"
        - ".config/bat"
        - ".config/direnv"
        - ".config/ruff"
        - ".config/starship"
        - ".emacs.d"
        - ".local/bin"
        - ".jetbrains/goland"
        - ".jetbrains/pycharm"

    - name: Create dotfile symlinks
      ansible.builtin.file:
        src: "{{ dotfiles_repo_path }}/{{ item.src }}"
        dest: "{{ ansible_env.HOME }}/{{ item.dest }}"
        state: link
        force: yes
      loop:
        # Shell configuration
        - { src: "shell/zshrc", dest: ".zshrc" }
        - { src: "starship/starship.toml", dest: ".config/starship.toml" }
        
        # Git configuration
        - { src: "git/gitconfig", dest: ".gitconfig" }
        
        # Editor configurations
        - { src: "helix/config.toml", dest: ".config/helix/config.toml" }
        - { src: "helix/languages.toml", dest: ".config/helix/languages.toml" }
        - { src: "zed/settings.json", dest: ".config/zed/settings.json" }
        - { src: "emacs/init.el", dest: ".emacs.d/init.el" }
        
        # Terminal and multiplexer
        - { src: "terminal/ghostty/config", dest: ".config/ghostty/config" }
        - { src: "terminal/zellij/config.kdl", dest: ".config/zellij/config.kdl" }
        
        # Development tools
        - { src: "bat/config", dest: ".config/bat/config" }
        - { src: "direnv/direnvrc", dest: ".config/direnv/direnvrc" }
        - { src: "ruff/ruff.toml", dest: ".config/ruff/ruff.toml" }
        
        # Code formatting
        - { src: "prettier/prettierrc", dest: ".prettierrc" }
        - { src: "prettier/prettierignore", dest: ".prettierignore" }
        - { src: "eslint/eslint.config.js", dest: "eslint.config.js" }
        
        # Development scripts
        - { src: "shell/dev-session", dest: ".local/bin/dev-session" }
        - { src: "shell/editor-test", dest: ".local/bin/editor-test" }
        - { src: "shell/ide-launcher", dest: ".local/bin/ide-launcher" }
        
        # JetBrains IDE settings
        - { src: "jetbrains/goland/settings.json", dest: ".jetbrains/goland/settings.json" }
        - { src: "jetbrains/pycharm/settings.json", dest: ".jetbrains/pycharm/settings.json" }

    - name: Create Zellij layout symlinks
      ansible.builtin.file:
        src: "{{ dotfiles_repo_path }}/terminal/zellij/layouts/{{ item }}.kdl"
        dest: "{{ ansible_env.HOME }}/.config/zellij/layouts/{{ item }}.kdl"
        state: link
        force: yes
      loop:
        - go-dev
        - python-dev
        - ts-dev
        - rust-dev
        - docker-dev
        - ansible-dev
        - general-dev
        - emacs-dev
        - goland-dev
        - pycharm-dev
        - zed-dev
        - helix-dev
        - helix-glow

    - name: Create Firefox profile symlink (macOS)
      ansible.builtin.file:
        src: "{{ dotfiles_repo_path }}/firefox/profiles.ini"
        dest: "{{ ansible_env.HOME }}/Library/Application Support/Firefox/profiles.ini"
        state: link
        force: yes
      when: ansible_os_family == "Darwin"
